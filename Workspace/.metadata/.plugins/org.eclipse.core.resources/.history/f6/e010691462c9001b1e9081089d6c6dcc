import java.util.ArrayList;

import javax.sound.sampled.Control;

public class Musteri extends Kisi {
	int musteriNumarasi;
	ArrayList<KrediKarti> krediKartlari = new ArrayList<>();
	ArrayList<BankaHesabi> hesaplar = new ArrayList<>();
	
	public Musteri(String ad, String soyad, String email, int telefonNumarasi) {
		super(ad, soyad, email, telefonNumarasi);
		
	}
	
	public void HesapEkle(String hesapturu,double neKadarBakiye) {
		if(hesapturu == "Vadesiz") {
			VadesizHesap hesap = new VadesizHesap(neKadarBakiye);
			hesap.setHesaptürü(hesapturu);
			hesaplar.add(hesap);
		}else if(hesapturu == "Yatýrým") {
			YatirimHesabi hesap = new YatirimHesabi(neKadarBakiye);
			hesap.setHesaptürü(hesapturu);	
			hesaplar.add(hesap);
		}
		
		System.out.println(hesapturu+" "+"hesap"+" "+"oluþturuldu");
		
	};
	
	public void KrediKartiEkle(double limit,double borc) {
		if(limit >= borc) {
			KrediKarti krediKarti  = new KrediKarti(limit,borc);
			krediKartlari.add(krediKarti);
			System.out.println("Kredi karti eklendi");
		}else {
			System.out.println("Borc limitden büyük olamaz");
		}
	};
	
	public void HesapSil(){
		
		for(int i=0;i<this.hesaplar.size();i++) {
			if(this.hesaplar.get(i).bakiye > 0) {
				System.out.println("lütfen öncelikle bakiyenizi baþka bir hesaba aktarýnýz");
			}else if(this.hesaplar.get(i).bakiye == 0) {
				this.hesaplar.remove(i);
				System.out.println(this.hesaplar.get(i).iban+" "+"iban nolu hesabýnýz silinmiþtir");
			}
		}
		
	}
	
	public void KrediKartiSil() {
		if(this.krediKartlari.get(0).guncelBorc == 0) {
			this.krediKartlari.remove(0);
		}else {
			System.out.println("lütfen öncelikle borç ödemesi yapýnýz");
		}
	};
	
	public void hesapBilgisi() {
		System.out.println(this.hesaplar.get(0).bakiye);
		System.out.println(this.hesaplar.get(1).bakiye);
	}
	@Override
	public String toString() {
		return "Musteri [musteriNumarasi=" + musteriNumarasi + "]";
	}
	
}
